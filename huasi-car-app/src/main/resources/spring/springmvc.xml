<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd">

	<!-- <aop:config proxy-target-class="true" /> -->
	<aop:aspectj-autoproxy proxy-target-class="true" />
	
	<!-- 采用注释的方式配置bean -->
	<context:annotation-config />

	<!-- 配置要扫描的包 -->
	<context:component-scan base-package="org.huasi.car"></context:component-scan>

	<context:property-placeholder location="classpath:properties/token.properties"
		ignore-unresolvable="true" />

	<!-- 字符串格式转化器 -->
	<bean id="stringHttpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter">
		<constructor-arg value="UTF-8" index="0"></constructor-arg>
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<!-- json格式转换器 -->
	<bean id="fastJsonHttpMessageConverter"
		class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json;charset=UTF-8</value>
				<value>text/html;charset=UTF-8</value><!-- 避免IE出现下载JSON文件的情况 -->
			</list>
		</property>
		<property name="features">
			<list>
				<value>QuoteFieldNames</value>
				<value>WriteDateUseDateFormat</value>
			</list>
		</property>
	</bean>
	<!-- xml 格式转换器 -->
	<bean id="castorMarshaller" class="org.springframework.oxm.castor.CastorMarshaller" />
	<bean id="marshallingHttpMessageConverter"
		class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
		<property name="marshaller" ref="castorMarshaller" />
		<property name="unmarshaller" ref="castorMarshaller" />
		<property name="supportedMediaTypes">
			<list>
				<value>text/xml;charset=UTF-8</value>
				<value>application/xml;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<mvc:annotation-driven>
		<mvc:message-converters>
			<ref bean="stringHttpMessageConverter" />
			<ref bean="fastJsonHttpMessageConverter" />
			<ref bean="marshallingHttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!--2:静态资源默认servlet配置 1、加入对静态资源的处理:js,css,gif,png 2、允许使用"/"做整体映射 -->
	<mvc:default-servlet-handler />
	<!--3:配置JSP 显示ViewResolver -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 不进行拦截的 -->
	<mvc:resources location="/resources/" mapping="/resources/"
		cache-period="1024" />

	<!-- 全局异常处理 -->
	<bean id="exceptionResolver" class="org.huasi.car.resolver.GlobalHandlerExceptionResolver"></bean>

	<!-- 拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/active/**" />
			<mvc:mapping path="/commont/**" />
			<mvc:mapping path="/common/**" />
			<mvc:mapping path="/system/**" />
			<mvc:mapping path="/merchant/**" />
			<mvc:mapping path="/order/**" />
			<mvc:mapping path="/user/**" />
			<bean class="org.huasi.car.interceptor.TokenInterceptor">
				<property name="field" value="${token.field}" />
				<property name="privateKey" value="${token.privateKey}" />
				<property name="algorithm" value="${token.algorithm}" />
				<property name="usable" value="false" />
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- 支持上传文件 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="1048578" />
	</bean>

	<!-- jsonp支持 -->
	<bean
		class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
		<property name="jsonpParameterNames">
			<set>
				<value>jsonp</value>
				<value>callback</value>
			</set>
		</property>
	</bean>
</beans>